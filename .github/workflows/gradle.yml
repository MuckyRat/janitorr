# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Java CI

on:
  push:
    paths:
      - src/**
      - buildSrc/**
      - build.gradle.kts
      - settings.gradle.kts
    tags:
      - '**'
    branches:
      - 'develop'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Extract branch name
        shell: bash
        run: >
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Log in to Docker Hub to pull images without rate limit
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Gradle for a non-wrapper project
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: 8.10.1

      - name: Build JVM OCI image
        run: gradle jib
        env:
          USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Native OCI Image
        run: gradle bootBuildImage --publishImage --imagePlatform linux/amd64
        env:
          USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          TARGET_PLATFORM: "amd64"

      - name: Setup QEMU for ARM64 OCI Image
        #if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/setup-qemu-action@v3
        with:
          platforms: 'all'

      - name: Set up Docker Buildx for ARM64 OCI Image
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          platforms: 'linux/amd64,linux/arm64'

      - name: Build Native ARM64 OCI Image
        #if: startsWith(github.ref, 'refs/tags/v')
        run: gradle bootBuildImage --publishImage --imagePlatform linux/arm64
        env:
          USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          TARGET_PLATFORM: "arm64"

      - name: Combine native images into single manifest
        uses: int128/docker-manifest-create-action@v2
        with:
          push: true
          tags: | 
            ghcr.io/schaka/janitorr:native-${{ steps.extract_branch.outputs.branch }}
            ${{ (startsWith(github.ref, 'refs/tags/v') && 'ghcr.io/schaka/janitorr:native-stable') || '' }}
          sources: | 
            ghcr.io/schaka/janitorr:native-amd64-${{ steps.extract_branch.outputs.branch }}
            ghcr.io/schaka/janitorr:native-arm64-${{ steps.extract_branch.outputs.branch }}
          
